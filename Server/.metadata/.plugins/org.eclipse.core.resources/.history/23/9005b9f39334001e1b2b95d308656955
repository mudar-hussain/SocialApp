package com.social.socialapp.service.Implementation;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;

import com.social.socialapp.dto.CommentDto;
import com.social.socialapp.dto.PostDto;
import com.social.socialapp.dto.StoryDto;
import com.social.socialapp.dto.UserDto;
import com.social.socialapp.entities.Comment;
import com.social.socialapp.entities.Post;
import com.social.socialapp.entities.Story;
import com.social.socialapp.entities.User;
import com.social.socialapp.service.Interface.DtoUtil;
import com.social.socialapp.service.Interface.UserService;

public class DtoUtilImpl implements DtoUtil {


	@Override
	public UserDto mapUserToUserDto(User user) {
		UserDto userDto = new UserDto();
		
		userDto.setName(user.getName());
		userDto.setEmail(user.getEmail());
		userDto.setProfileImage(user.getProfileImage());
		userDto.setUsername(user.getUsername());
		userDto.setId(user.getId());
		
		return userDto;
	}

	@Override
	public List<UserDto> mapUsersToUserDtos(List<User> users) {
		return users.stream()
                .map((User user) -> this.mapUserToUserDto(user))
                .collect(Collectors.toList());
	}


	@Override
	public StoryDto mapStoryToStoryDto(Story story, UserDto userDto) {
		
		StoryDto storyDto = new StoryDto();
		
		storyDto.setId(story.getId());
		storyDto.setStoryImage(story.getStoryImage());
		storyDto.setCaption(story.getCaption());
		storyDto.setTimestamp(story.getTimestamp());
		
		if(userDto == null) {
			storyDto.setUser(this.mapUserToUserDto(story.getUser()));
		}else {
			storyDto.setUser(userDto);
		}
		
		if(story.getLikedByUsers().size() > 0) {
			storyDto.setLikedByUsers(userService.mapUsersToUserDtos(story.getLikedByUsers().stream().collect(Collectors.toList())));
		}
		return storyDto;
	}


	@Override
	public List<StoryDto> mapStoriesToStoryDtos(List<Story> stories, UserDto userDto) {
		return stories.stream()
                .map((Story story) -> mapStoryToStoryDto(story, userDto))
                .collect(Collectors.toList());
	}
	

	@Override
	public PostDto mapPostToPostDto(Post post, UserDto userDto) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<PostDto> mapPostsToPostDtos(List<Post> posts, UserDto userDto) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public CommentDto mapCommentToCommentDto(Comment comment, UserDto userDto, PostDto postDto) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<CommentDto> mapCommentsToCommentDtos(List<Comment> comments, UserDto userDto, PostDto postDto) {
		// TODO Auto-generated method stub
		return null;
	}

}
