package com.social.socialapp.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.social.socialapp.constant.SecurityConstant;
import com.social.socialapp.entities.Post;
import com.social.socialapp.entities.Story;
import com.social.socialapp.entities.User;
import com.social.socialapp.exceptions.UserException;
import com.social.socialapp.service.Interface.StoryService;
import com.social.socialapp.service.Interface.UserService;

@RestController
@RequestMapping("/api/stories")
public class StoryController {

	@Autowired
	private UserService userService;
	
	@Autowired
	private StoryService storyService;
	
	@PostMapping("/create")
	public ResponseEntity<Story> createStoryHandler(@RequestBody Story story,
			@RequestHeader(SecurityConstant.JWT_TOKEN_HEADER) String token) throws UserException{
		
		User user = userService.findUserProfile(token);
		Story createdStory = storyService.createStory(story, user.getId());
		
		return new ResponseEntity<Story>(createdStory, HttpStatus.OK);	
		
		
	}
	
	@GetMapping("/all/{userId}")
	public ResponseEntity<List<Story>> findStoryByUserIdHandler(@PathVariable("userId") Integer userId) throws UserException{
			
		List<Story> stories = storyService.findStoryByUserId(userId);
		
		return new ResponseEntity<List<Story>>(stories, HttpStatus.OK);
		
		
	} 
}
